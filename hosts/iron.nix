# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, boot, ... }:
{
  programs.i3status-rust = {
    networkInterface = "eno1";
    batteries = [
      {
        device = "battery_hidpp_battery_0";
        name = "";
      }
      {
        device = "battery_hidpp_battery_1";
        name = "";
      }
      {
        device = "ups_hiddev1";
        name = "";
      }
    ];
  };

  boot = {
    extraModulePackages = [ config.boot.kernelPackages.rtl88x2bu ];
    initrd = {
      availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
      luks.devices."crypted".device = "/dev/disk/by-uuid/8dcc8ac6-cb24-4d17-a412-c6ca32c02f9b";
    };
  };

  fileSystems = {
    "/" = {
      device = "/dev/mapper/crypted";
      fsType = "btrfs";
    };
    "/boot" = {
      device = "/dev/disk/by-label/boot";
      fsType = "vfat";
    };
    "/mnt/storage" = {
      device = "/dev/disk/by-uuid/d838985e-9b04-4d7f-84c7-de7b73186858";
      fsType = "btrfs";
    };
  };

  # This value determines the NixOS release with which your system is to be
  # compatible, in order to avoid breaking some software such as database
  # servers. You should change this only after NixOS release notes say you
  # should.
  system.stateVersion = "19.03";
  services = {
    cron = {
      enable = true;
      mailto = let at = "@"; in "bakhtiyarneyman${at}gmail.com";
      systemCronJobs = [
        "0 20 * * Sun bakhtiyar rsync --archive --verbose OneDrive/mezar/ /mnt/storage/backups/mezar/(date +%Y%m%d%H%M%S)"
      ];
    };

    xserver = {
      videoDrivers = [ "amdgpu" ];
      xrandrHeads = [
        { output = "DP-1"; primary = true; }
        { output = "DP-3"; }
      ];
      dpi = 175;
      displayManager = {
        gdm.enable = true;
        setupCommands = ''
          ${pkgs.xorg.xrandr}/bin/xrandr --setprovideroutputsource "modesetting" NVIDIA-0
          ${pkgs.xorg.xrandr}/bin/xrandr --output DP-1 --auto --primary --output DP-3 --auto --right-of DP-1
        '';
      };
    };
  };

  programs.sway = {
    extraOptions = [ "--unsupported-gpu" ];
    extraSessionCommands = ''
      export WLR_NO_HARDWARE_CURSORS=1
    '';
  };
  virtualisation.docker.enableNvidia = true;
}
